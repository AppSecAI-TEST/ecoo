USE [master]
GO

IF  EXISTS (SELECT name FROM sys.databases WHERE name = N'ecoo_bpm')
BEGIN
	DECLARE @sql VARCHAR(MAX)
	
	ALTER DATABASE ecoo_bpm
	SET SINGLE_USER
	WITH ROLLBACK IMMEDIATE;
	ALTER DATABASE ecoo_bpm
	SET MULTI_USER;

	DROP DATABASE [ecoo_bpm]
END
GO

IF  EXISTS (SELECT name FROM sys.databases WHERE name = N'ecoo')
BEGIN
	DECLARE @sql VARCHAR(MAX)
	
	ALTER DATABASE ecoo
	SET SINGLE_USER
	WITH ROLLBACK IMMEDIATE;
	ALTER DATABASE ecoo
	SET MULTI_USER;

	DROP DATABASE [ecoo]
END
GO
CREATE DATABASE [ecoo]   
GO
EXEC dbo.sp_dbcmptlevel @dbname=N'ecoo', @new_cmptlevel=100
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
EXEC [ecoo].[dbo].[sp_fulltext_database] @action = 'enable'
GO
ALTER DATABASE [ecoo] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [ecoo] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [ecoo] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [ecoo] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [ecoo] SET ARITHABORT ON 
GO
ALTER DATABASE [ecoo] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [ecoo] SET AUTO_CREATE_STATISTICS OFF 
GO
ALTER DATABASE [ecoo] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [ecoo] SET AUTO_UPDATE_STATISTICS OFF 
GO
ALTER DATABASE [ecoo] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [ecoo] SET CURSOR_DEFAULT GLOBAL 
GO
ALTER DATABASE [ecoo] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [ecoo] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [ecoo] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [ecoo] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [ecoo] SET  DISABLE_BROKER 
GO
ALTER DATABASE [ecoo] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [ecoo] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [ecoo] SET TRUSTWORTHY ON 
GO
ALTER DATABASE [ecoo] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [ecoo] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [ecoo] SET  READ_WRITE 
GO
ALTER DATABASE [ecoo] SET RECOVERY SIMPLE 
GO
ALTER DATABASE [ecoo] SET  MULTI_USER 
GO	
ALTER DATABASE [ecoo] SET PAGE_VERIFY TORN_PAGE_DETECTION  
GO
ALTER DATABASE [ecoo] SET DB_CHAINING OFF 
GO
ALTER DATABASE [ecoo] COLLATE SQL_Latin1_General_CP1_CI_AS
GO
ALTER DATABASE [ecoo] SET COMPATIBILITY_LEVEL = 100
GO





/****** Object:  Login [ecoo]    Script Date: 01/23/2017 05:05:27 ******/
IF  EXISTS (SELECT * FROM sys.server_principals WHERE name = N'ecoo')
DROP LOGIN [ecoo]
GO


USE [master]
GO
CREATE LOGIN [ecoo] WITH PASSWORD=N'jd3rcJuiWN4sExXB', DEFAULT_DATABASE=[master], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
GO







USE [ecoo]
GO
IF NOT EXISTS (SELECT * FROM sys.database_principals WHERE name = N'db_executor')
BEGIN
	CREATE ROLE [db_executor] AUTHORIZATION [dbo]
	GRANT EXECUTE TO [db_executor]
	GRANT EXECUTE ON SCHEMA::[dbo] TO [db_executor]
END
GO

CREATE USER [ecoo] FOR LOGIN [ecoo] WITH DEFAULT_SCHEMA=[dbo]
GO
EXEC sp_addrolemember N'db_datareader', N'ecoo'
GO
EXEC sp_addrolemember N'db_datawriter', N'ecoo'
GO
EXEC sp_addrolemember N'db_executor', N'ecoo'
GO
EXEC sp_addrolemember N'db_ddladmin', N'ecoo'
GO
EXEC master..sp_addsrvrolemember @loginame = N'ecoo', @rolename = N'bulkadmin'
GO

ALTER LOGIN [ecoo] WITH DEFAULT_DATABASE=[ecoo], DEFAULT_LANGUAGE=[us_english], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
GO

USE [ecoo]
GO


-- =====================================================================================
-- REVISION
-- =====================================================================================
CREATE TABLE "rev_type" (
  "id" tinyint NOT NULL,
  "desrc" varchar(20) NOT NULL,
CONSTRAINT [pk_rev_type] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

CREATE TABLE "revision" (
  "id" int IDENTITY(1,1) NOT NULL,
  "modified_by" smallint NOT NULL,
  "timestamp" bigint NOT NULL,
  "date_modified" datetime NOT NULL,
CONSTRAINT [pk_revision] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

INSERT INTO "rev_type" ("id", "desrc") VALUES
(0, 'INSERTED'),
(1, 'UPDATED'),
(2, 'DELETED');


-- =====================================================================================
-- TITLE
-- =====================================================================================
CREATE TABLE "title" (
  "id" varchar(10) NOT NULL,
  "descr" varchar(10) NOT NULL,
CONSTRAINT [pk_title] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

CREATE TABLE "title_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
	[id] [varchar](10) NOT NULL,
	[descr] [varchar](10) NULL,
CONSTRAINT pk_title_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "title_log" ADD CONSTRAINT "fk_title_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "title_log" ADD CONSTRAINT "fk_title_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO

INSERT INTO "title" ("id", "descr") VALUES
('ADV', 'ADV'),
('COL', 'COL'),
('DR', 'DR'),
('MISS', 'MISS'),
('MNR', 'MNR'),
('MR', 'MR'),
('MRS', 'MRS'),
('MS', 'MS'),
('PROF', 'PROF'),
('REV', 'REV'),
('SGT', 'SGT'),
('SIR', 'SIR'),
('SISTER', 'SISTER');


-- =====================================================================================
-- COUNTRY
-- =====================================================================================
CREATE TABLE "country" (
  "id" varchar(2) NOT NULL,
  "descr" varchar(20) NOT NULL,
CONSTRAINT [pk_country] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

INSERT INTO "country" ("id", "descr") VALUES
('AD', 'ANDORRA'),
('AE', 'UNITED ARAB EMIRATES'),
('AF', 'AFGHANISTAN'),
('AG', 'ANTIGUA AND BARBUDA'),
('AI', 'ANGUILLA'),
('AL', 'ALBANIA'),
('AM', 'ARMENIA'),
('AN', 'NETHERLANDS ANTILLES'),
('AO', 'ANGOLA'),
('AR', 'ARGENTINA'),
('AS', 'AMERICAN SAMOA'),
('AT', 'AUSTRIA'),
('AU', 'AUSTRALIA'),
('AW', 'ARUBA'),
('AZ', 'AZERBAIJAN'),
('BB', 'BARBADOS'),
('BD', 'BANGLADESH'),
('BE', 'BELGIUM'),
('BF', 'BURKINA FASO'),
('BG', 'BULGARIA'),
('BH', 'BAHRAIN'),
('BI', 'BURUNDI'),
('BJ', 'BENIN'),
('BM', 'BERMUDA'),
('BN', 'BRUNEIDARUSSALAM'),
('BO', 'BOLIVIA'),
('BR', 'BRAZIL'),
('BS', 'BAHAMAS'),
('BT', 'BHUTAN'),
('BV', 'BOUVET ISLAND'),
('BW', 'BOTSWANA'),
('BY', 'BELARUS'),
('BZ', 'BELIZE'),
('CA', 'CANADA'),
('CD', 'CONGO'),
('CG', 'CONGO'),
('CH', 'SWITZERLAND'),
('CI', 'COTE D`IVOIRE'),
('CK', 'COOK ISLANDS'),
('CL', 'CHILE'),
('CM', 'CAMEROON'),
('CN', 'CHINA'),
('CO', 'COLOMBIA'),
('CR', 'COSTA RICA'),
('CU', 'CUBA'),
('CV', 'CAPE VERDE'),
('CX', 'CHRISTMAS ISLAND'),
('CY', 'CYPRUS'),
('CZ', 'CZECH REPUBLIC'),
('DE', 'GERMANY'),
('DJ', 'DJIBOUTI'),
('DK', 'DENMARK'),
('DM', 'DOMINICA'),
('DO', 'DOMINICAN REPUBLIC'),
('DZ', 'ALGERIA'),
('EC', 'ECUADOR'),
('EE', 'ESTONIA'),
('EG', 'EGYPT'),
('EH', 'WESTERN SAHARA'),
('ER', 'ERITREA'),
('ES', 'SPAIN'),
('ET', 'ETHIOPIA'),
('FI', 'FINLAND'),
('FJ', 'FIJI'),
('FM', 'MICRONESIA'),
('FO', 'FAEROEISLANDS'),
('FR', 'FRANCE'),
('GA', 'GABON'),
('GB', 'UNITED KINGDOM'),
('GD', 'GRENADA'),
('GE', 'GEORGIA'),
('GF', 'FRENCH GUIANA'),
('GH', 'GHANA'),
('GI', 'GIBRALTAR'),
('GL', 'GREENLAND'),
('GM', 'GAMBIA'),
('GN', 'GUINEA'),
('GP', 'GUADELOUPE'),
('GQ', 'EQUATORIAL GUINEA'),
('GR', 'GREECE'),
('GT', 'GUATEMALA'),
('GU', 'GUAM'),
('GW', 'GUINEA-BISSAU'),
('GY', 'GUYANA'),
('HK', 'HONG KONG'),
('HN', 'HONDURAS'),
('HR', 'CROATIA'),
('HT', 'HAITI'),
('HU', 'HUNGARY'),
('ID', 'INDONESIA'),
('IE', 'IRELAND'),
('IL', 'ISRAEL'),
('IN', 'INDIA'),
('IQ', 'IRAQ'),
('IR', 'IRAN'),
('IS', 'ICELAND'),
('IT', 'ITALY'),
('JM', 'JAMAICA'),
('JO', 'JORDAN'),
('JP', 'JAPAN'),
('KE', 'KENYA'),
('KG', 'KYRGYZSTAN'),
('KH', 'CAMBODIA'),
('KI', 'KIRIBATI'),
('KM', 'COMOROS'),
('KP', 'NORTH KOREA'),
('KR', 'SOUTH KOREA'),
('KW', 'KUWAIT'),
('KY', 'CAYMANISLANDS'),
('KZ', 'KAZAKHSTAN'),
('LB', 'LEBANON'),
('LC', 'SAINT LUCIA'),
('LI', 'LIECHTENSTEIN'),
('LK', 'SRI LANKA'),
('LR', 'LIBERIA'),
('LS', 'LESOTHO'),
('LT', 'LITHUANIA'),
('LU', 'LUXEMBOURG'),
('LV', 'LATVIA'),
('MA', 'MOROCCO'),
('MC', 'MONACO'),
('MD', 'MOLDOVA'),
('MG', 'MADAGASCAR'),
('MH', 'MARSHALL ISLANDS'),
('MK', 'MACEDONIA'),
('ML', 'MALI'),
('MM', 'MYANMAR'),
('MN', 'MONGOLIA'),
('MO', 'MACAO'),
('MQ', 'MARTINIQUE'),
('MR', 'MAURITANIA'),
('MS', 'MONTSERRAT'),
('MT', 'MALTA'),
('MU', 'MAURITIUS'),
('MV', 'MALDIVES'),
('MW', 'MALAWI'),
('MX', 'MEXICO'),
('MY', 'MALAYSIA'),
('MZ', 'MOZAMBIQUE'),
('NA', 'NAMIBIA'),
('NC', 'NEW CALEDONIA'),
('NE', 'NIGER'),
('NF', 'NORFOLKISLAND'),
('NG', 'NIGERIA'),
('NI', 'NICARAGUA'),
('NL', 'NETHERLANDS'),
('NO', 'NORWAY'),
('NP', 'NEPAL'),
('NR', 'NAURU'),
('NU', 'NIUE'),
('NZ', 'NEW ZEALAND'),
('OM', 'OMAN'),
('PA', 'PANAMA'),
('PE', 'PERU'),
('PF', 'FRENCH POLYNESIA'),
('PG', 'PAPUA NEW GUINEA'),
('PH', 'PHILIPPINES'),
('PK', 'PAKISTAN'),
('PL', 'POLAND'),
('PN', 'PITCAIRN'),
('PR', 'PUERTO RICO'),
('PT', 'PORTUGAL'),
('PW', 'PALAU'),
('PY', 'PARAGUAY'),
('QA', 'QATAR'),
('RE', 'REUNION'),
('RO', 'ROMANIA'),
('RU', 'RUSSIAN FEDERATION'),
('RW', 'RWANDA'),
('SA', 'SAUDI ARABIA'),
('SB', 'SOLOMON ISLANDS'),
('SC', 'SEYCHELLES'),
('SD', 'SUDAN'),
('SE', 'SWEDEN'),
('SG', 'SINGAPORE'),
('SH', 'SAINT HELENA'),
('SI', 'SLOVENIA'),
('SK', 'SLOVAKIA'),
('SL', 'SIERRA LEONE'),
('SN', 'SENEGAL'),
('SO', 'SOMALIA'),
('SR', 'SURINAME'),
('SV', 'EL SALVADOR'),
('SY', 'SYRIAN ARAB REPUBLIC'),
('SZ', 'SWAZILAND'),
('TD', 'CHAD'),
('TG', 'TOGO'),
('TH', 'THAILAND'),
('TJ', 'TAJIKISTAN'),
('TK', 'TOKELAU'),
('TM', 'TURKMENISTAN'),
('TN', 'TUNISIA'),
('TO', 'TONGA'),
('TP', 'EAST TIMOR'),
('TR', 'TURKEY'),
('TT', 'TRINIDAD AND TOBAGO'),
('TV', 'TUVALU'),
('TW', 'TAIWAN'),
('TZ', 'TANZANIA'),
('UA', 'UKRAINE'),
('UG', 'UGANDA'),
('US', 'UNITED STATES'),
('UY', 'URUGUAY'),
('UZ', 'UZBEKISTAN'),
('VE', 'VENEZUELA'),
('VG', 'VIRGIN ISLANDS (GB)'),
('VI', 'VIRGIN ISLANDS (USA)'),
('VN', 'VIET NAM'),
('VU', 'VANUATU'),
('WF', 'WALLIS AND FUTUNA'),
('WS', 'SAMOA'),
('YE', 'YEMEN'),
('YT', 'MAYOTTE'),
('YU', 'YUGOSLAVIA'),
('ZA', 'SOUTH AFRICA'),
('ZM', 'ZAMBIA'),
('ZW', 'ZIMBABWE');

CREATE TABLE "country_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
  "id" varchar(2) NOT NULL,
  "descr" varchar(20) NULL,
CONSTRAINT [pk_country_log] PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

-- =====================================================================================
-- PROVINCE
-- =====================================================================================
CREATE TABLE "province" (
  "id" int NOT NULL,
  "descr" varchar(20) NOT NULL,
CONSTRAINT [pk_province] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

INSERT INTO "province" ("id", "descr") VALUES
(1, 'OTHER'),
(2, 'EASTERN CAPE'),
(3, 'FREE STATE'),
(4, 'GAUTENG'),
(5, 'KWAZULU-NATAL'),
(6, 'LIMPOPO'),
(7, 'MPUMALANGA'),
(8, 'NORTH WEST'),
(9, 'NORTHERN CAPE'),
(10, 'WESTERN CAPE');

CREATE TABLE "province_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
  "id" int NOT NULL,
  "descr" varchar(20) NULL,
CONSTRAINT [pk_province_log] PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "province_log" ADD CONSTRAINT "fk_province_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");
ALTER TABLE "province_log" ADD CONSTRAINT "fk_province_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO


-- =====================================================================================
-- DOC TYPE
-- =====================================================================================
CREATE TABLE [dbo].doc_type(
	[id] [varchar](3) NOT NULL,
	[descr] [varchar](50) NOT NULL,
CONSTRAINT [pk_doc_type] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

INSERT INTO "doc_type" ("id", "descr") VALUES
('PCR', 'PROOF OF COMPANY REGISTRATION'),
('L', 'COMPANY LOGO');

CREATE TABLE "doc_type_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
	[id] [varchar](3) NOT NULL,
	[descr] [varchar](50) NULL,
CONSTRAINT pk_doc_type_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "doc_type_log" ADD CONSTRAINT "fk_doc_type_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "doc_type_log" ADD CONSTRAINT "fk_doc_type_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO


-- =====================================================================================
-- CHAMBER
-- =====================================================================================
CREATE TABLE "chamber" (
  "id" smallint IDENTITY(1,1) NOT NULL,
  "name" varchar(200) NOT NULL,
  building varchar(50) NOT NULL,
  street varchar(100) NOT NULL,
  city varchar(100) NOT NULL,
  postcode varchar(10) NOT NULL,
  province_id int NOT NULL,
  country_id varchar(2) NOT NULL,
  phone_no varchar(20) NOT NULL,
  fax_no varchar(20) NULL,
  email varchar(255) NOT NULL,
  website varchar(255) NULL,
CONSTRAINT [pk_chamber] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "chamber" ADD CONSTRAINT "fk_chamber_province" FOREIGN KEY ("province_id") REFERENCES "province" ("id");  
ALTER TABLE "chamber" ADD CONSTRAINT "fk_chamber_country" FOREIGN KEY ("country_id") REFERENCES "country" ("id");
GO

CREATE TABLE "chamber_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
  "id" smallint NOT NULL,
  "name" varchar(200) NULL,
  building varchar(50) NULL,
  street varchar(100) NULL,
  city varchar(100) NULL,
  postcode varchar(10) NULL,
  province_id int NULL,
  country_id varchar(2) NULL,
  phone_no varchar(20) NULL,
  fax_no varchar(20) NULL,
  email varchar(255) NULL,
  website varchar(255) NULL,
CONSTRAINT pk_chamber_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "chamber_log" ADD CONSTRAINT "fk_chamber_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "chamber_log" ADD CONSTRAINT "fk_chamber_log_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO


CREATE TABLE "chamber_doc" (
  "id" smallint IDENTITY(1,1) NOT NULL,
  "chamber_id" smallint NOT NULL,
  "doc_type" [varchar](3) NOT NULL,
  "encoded_image" nvarchar(max) NOT NULL
CONSTRAINT pk_chamber_doc PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "chamber_doc" ADD CONSTRAINT "fk_chamber_doc_chamber" FOREIGN KEY ("chamber_id") REFERENCES "chamber" ("id");
ALTER TABLE "chamber_doc" ADD CONSTRAINT "fk_chamber_doc_doc_type" FOREIGN KEY ("doc_type") REFERENCES "doc_type" ("id");
GO

INSERT INTO "chamber" VALUES ('CHAMBER OF RANDBURG','UNIT G8 ATRIUM TERRACES','272 OAK AVENUE','RANDBURG','2194','4','ZA','086 101 9218','086 212 4407','ADMIN@RCCI.CO.ZA','http://rcci.co.za');
INSERT INTO "chamber_doc" VALUES (1,'L','')
GO

-- =====================================================================================
-- COMPANY
-- =====================================================================================
CREATE TABLE [dbo].company_status(
	[id] [varchar](3) NOT NULL,
	[descr] [varchar](50) NOT NULL,
CONSTRAINT pk_company_status PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

INSERT INTO "company_status" ("id", "descr") VALUES
('PA', 'Pending Approval'),
('A', 'Approved'),
('D', 'Declined');
GO

CREATE TABLE [dbo].company_type(
	[id] [varchar](3) NOT NULL,
	[descr] [varchar](50) NOT NULL,
CONSTRAINT pk_company_type PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

INSERT INTO "company_type" ("id", "descr") VALUES
('E', 'EXPORTER'),
('FF', 'FREIGHT FORWARDER');
GO

CREATE TABLE "company_type_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
	[id] [varchar](3) NOT NULL,
	[descr] [varchar](50) NULL,
CONSTRAINT pk_company_type_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "company_type_log" ADD CONSTRAINT "fk_company_type_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "company_type_log" ADD CONSTRAINT "fk_company_type_log_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO

CREATE TABLE company (
  id int IDENTITY(1,1) NOT NULL,
  name varchar(200) NOT NULL,
  registration_no varchar(50) NOT NULL,
  vat_no varchar(50) NULL,
  type_id varchar(3) NOT NULL,
  building varchar(50) NOT NULL,
  street varchar(100) NOT NULL,
  city varchar(100) NOT NULL,
  postcode varchar(10) NOT NULL,
  province_id int NOT NULL,
  country_id varchar(2) NOT NULL,
  phone_no varchar(100) NOT NULL,
  email varchar(255) NOT NULL,
  status varchar(3) NOT NULL,
CONSTRAINT [pk_company] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "company" ADD CONSTRAINT "fk_company_province" FOREIGN KEY ("province_id") REFERENCES "province" ("id");  
ALTER TABLE "company" ADD CONSTRAINT "fk_company_country" FOREIGN KEY ("country_id") REFERENCES "country" ("id");    
ALTER TABLE "company" ADD CONSTRAINT "fk_company_company_type" FOREIGN KEY ("type_id") REFERENCES "company_type" ("id");  
ALTER TABLE "company" ADD CONSTRAINT "fk_company_company_status" FOREIGN KEY ("status") REFERENCES "company_status" ("id");  
GO

CREATE TABLE "company_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
  id int NOT NULL,
  name varchar(200) NULL,
  registration_no varchar(50) NULL,
  vat_no varchar(50) NULL,
  type_id varchar(3) NULL,
  building varchar(50) NULL,
  street varchar(100) NULL,
  city varchar(100) NULL,
  postcode varchar(10) NULL,
  province_id int NULL,
  country_id varchar(2) NULL,
  phone_no varchar(100) NULL,
  email varchar(255) NULL,
  status varchar(3) NULL,
CONSTRAINT pk_company_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "company_log" ADD CONSTRAINT "fk_company_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "company_log" ADD CONSTRAINT "fk_company_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO

CREATE TABLE company_doc (
  "id" int IDENTITY(1,1) NOT NULL,
  "company_id" int NOT NULL,
  "doc_type" varchar(3) NOT NULL,
  "file_name" [varchar](255) NOT NULL,
  "encoded_image" nvarchar(max) NOT NULL,
  "mime_type" varchar(20) NOT NULL,
  "size_in_kb" smallint NOT NULL,
  "date_created" datetime NOT NULL,
CONSTRAINT [pk_company_doc] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE [dbo].company_doc  WITH CHECK ADD CONSTRAINT [fk_company_doc_doc_type] FOREIGN KEY(doc_type) REFERENCES [dbo].doc_type(id);
ALTER TABLE [dbo].company_doc  WITH CHECK ADD CONSTRAINT [fk_company_doc_company] FOREIGN KEY(company_id) REFERENCES [dbo].company(id);
GO

ALTER TABLE [dbo].company_doc ADD  CONSTRAINT ux_company_doc UNIQUE NONCLUSTERED (company_id ASC,doc_type ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
GO

CREATE TABLE "company_doc_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
  "id" int NOT NULL,
  "company_id" int NULL,
  "doc_type" varchar(3) NULL,
  "file_name" [varchar](255) NULL,
  "encoded_image" nvarchar(max) NULL,
  "mime_type" varchar(20) NULL,
  "size_in_kb" smallint NULL,
  "date_created" datetime NULL,
CONSTRAINT pk_company_doc_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "company_doc_log" ADD CONSTRAINT "fk_company_doc_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "company_doc_log" ADD CONSTRAINT "fk_company_doc_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO


-- =====================================================================================
-- ENDPOINT
-- =====================================================================================
CREATE TABLE "endpoint" (
  "id" int IDENTITY(1,1) NOT NULL,
  "name" varchar(50) NOT NULL,
  "url" varchar(255) NOT NULL,
  "requested_time" datetime NOT NULL,
  "response" varchar(8000) NOT NULL,
  "status" varchar(4) NOT NULL,
CONSTRAINT [pk_endpoint] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

SET IDENTITY_INSERT "endpoint" ON ;
INSERT INTO "endpoint" ("id", "name", "url", "requested_time", "response", "status") VALUES
(1, 'Gateway API/1', 'http://localhost:3331/health', '2016-08-29 20:23:54', '{"status":"UP","diskSpace":{"status":"UP","total":240054693888,"free":8417980416,"threshold":10485760},"db":{"status":"UP","database":"MySQL","hello":1}}', 'UP');
--(2, 'Workflow API/1', 'http://localhost:3333/bpm-ws/health', '2016-08-29 20:23:54', '{"status":"UP","diskSpace":{"status":"UP","total":240054693888,"free":8417980416,"threshold":10485760},"db":{"status":"UP","database":"MySQL","hello":1}}', 'UP'),
--(3, 'Claim Upload Processor API/1', 'http://localhost:2223/claim-uploadprocessor-ws/health', '2016-08-29 20:23:54', '{"status":"UP","diskSpace":{"status":"UP","total":240054693888,"free":8417980416,"threshold":10485760},"db":{"status":"UP","database":"MySQL","hello":1}}', 'UP'),
--(4, 'Metric Processor API/1', 'http://localhost:2225/metricprocessor-ws/health', '2016-08-29 20:23:54', '{"status":"UP","diskSpace":{"status":"UP","total":240054693888,"free":8417980416,"threshold":10485760},"db":{"status":"UP","database":"MySQL","hello":1}}', 'UP');
SET IDENTITY_INSERT "endpoint" OFF;

CREATE TABLE "endpoint_stat" (
  "id" int IDENTITY(1,1) NOT NULL,
  "endpoint_id" int NOT NULL,
  "requested_time" date NOT NULL,
  "response" varchar(8000) NOT NULL,
  "status" varchar(4) NOT NULL,
CONSTRAINT [pk_endpoint_stat] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

SET IDENTITY_INSERT "endpoint_stat" ON ;
INSERT INTO "endpoint_stat" ("id", "endpoint_id", "requested_time", "response", "status") VALUES
(1, 1, '2016-08-29', '{"status":"UP","diskSpace":{"status":"UP","total":240054693888,"free":8420458496,"threshold":10485760},"db":{"status":"UP","database":"MySQL","hello":1}}', 'UP');
SET IDENTITY_INSERT "endpoint_stat" OFF;


-- =====================================================================================
-- FEATURE
-- =====================================================================================
CREATE TABLE "feature" (
  "id" tinyint IDENTITY(1,1) NOT NULL,
  "name" varchar(50) NOT NULL,
  "value" varchar(1024) NOT NULL,
  "descr" varchar(100) NOT NULL,
CONSTRAINT [pk_feature] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

SET IDENTITY_INSERT "feature" ON;
INSERT INTO "feature" ("id", "name", "value", "descr") VALUES
(0, 'APP_HOME', 'C:\\Users\\Justin\\.ecoo', 'The application home directory'),
(1, 'SMTP_SERVER', '', 'The SMTP server either host name or IP address');
SET IDENTITY_INSERT "feature" OFF;

CREATE TABLE "feature_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
  "id" tinyint NOT NULL,
  "name" varchar(50) NULL,
  "value" varchar(1024) NULL,
  "descr" varchar(100) NULL,
CONSTRAINT [pk_feature_log] PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO



-- =====================================================================================
-- SYSTEM JOB
-- =====================================================================================
CREATE TABLE "system_job" (
  "id" int IDENTITY(1,1) NOT NULL,
  "class_name" varchar(1024) NOT NULL,
  "start_time" datetime NOT NULL,
  "end_time" datetime NULL,
  "processing_time" int NULL,
  "successful_ind" char(1) NOT NULL,
  "comment" varchar(512) NULL,
CONSTRAINT [pk_system_job] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO


-- =====================================================================================
-- SIGNATURE
-- =====================================================================================
CREATE TABLE "signature" (
  "id" int IDENTITY(1,1) NOT NULL,
  "personal_ref_value" varchar(50) NULL,
  "first_name" varchar(100) NOT NULL,
  "last_name" varchar(100) NOT NULL,
  "encoded_image" nvarchar(max) NOT NULL,
  "date_created" datetime NOT NULL,
  "user_signature_id" int NULL,
CONSTRAINT [pk_signature] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

CREATE TABLE "signature_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
  "id" int NOT NULL,
  "personal_ref_value" varchar(50) NULL,
  "first_name" varchar(100) NULL,
  "last_name" varchar(100) NULL,
  "encoded_image" nvarchar(max) NULL,
  "date_created" datetime NULL,
  "user_signature_id" int NULL,
CONSTRAINT pk_signature_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "signature_log" ADD CONSTRAINT "fk_signature_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "signature_log" ADD CONSTRAINT "fk_signature_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO

-- =====================================================================================
-- USER
-- =====================================================================================
CREATE TABLE "user_acc" (
  "id" int IDENTITY(1,1) NOT NULL,
  "title" varchar(10) NULL,
  "first_name" varchar(100) NOT NULL,
  "last_name" varchar(100) NOT NULL,
  "display_name" varchar(200) NOT NULL,
  "primary_email_address" varchar(255) NULL,
  "mobile_no" varchar(15) NULL,
  "prefer_comm_type" varchar(2) NULL,
  "username" varchar(100) NOT NULL,
  "password" varchar(50) NULL,
  "personal_ref_type" varchar(3) NULL,
  "personal_ref_value" varchar(50) NULL,
  "account_non_expired" char(1) DEFAULT 1,
  "account_non_locked" char(1) DEFAULT 1,
  "credentials_non_expired" char(1) DEFAULT 1,
  "enabled" char(1) DEFAULT 1,
  "reserved" char(1) DEFAULT 0,
  "password_expired" char(1) DEFAULT 1,
  "activation_serial_no" varchar(40) NULL,
  "last_login_time" datetime NULL,
  "status" varchar(3) NOT NULL,
  "company_id" int NULL,
  "designation" varchar(50) NULL,
CONSTRAINT [pk_user_acc] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[user_acc] ADD  CONSTRAINT ix_user_001 UNIQUE NONCLUSTERED (username ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
ALTER TABLE [dbo].[user_acc] ADD CONSTRAINT "fk_user_company" FOREIGN KEY ("company_id") REFERENCES "company" ("id");  
GO

CREATE TABLE "user_acc_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
  "id" int NOT NULL,
  "title" varchar(10) NULL,
  "first_name" varchar(100) NULL,
  "last_name" varchar(100) NULL,
  "display_name" varchar(200) NOT NULL,
  "primary_email_address" varchar(255) NULL,
  "mobile_no" varchar(15) NULL,
  "prefer_comm_type" varchar(2) NULL,
  "username" varchar(100) NULL,
  "password" varchar(50) NULL,
  "personal_ref_type" varchar(3) NULL,
  "personal_ref_value" varchar(50) NULL,
  "account_non_expired" char(1) NULL,
  "account_non_locked" char(1) NULL,
  "credentials_non_expired" char(1) NULL,
  "enabled" char(1) NULL,
  "reserved" char(1) NULL,
  "password_expired" char(1) NULL,
  "activation_serial_no" varchar(40) NULL,
  "last_login_time" datetime NULL,
  "status" varchar(3) NULL,
  "company_id" int NULL,
  "designation" varchar(50) NULL,
CONSTRAINT [pk_user_acc_log] PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "user_acc_log" ADD CONSTRAINT "fk_user_acc_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "user_acc_log" ADD CONSTRAINT "fk_user_acc_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO

CREATE TABLE company_sign (
  id int IDENTITY(1,1) NOT NULL,
  company_id int NOT NULL,
  user_id int NOT NULL,
  start_date datetime NOT NULL,
  end_date datetime NOT NULL,
CONSTRAINT [pk_company_sign] PRIMARY KEY CLUSTERED 
([user_id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE [dbo].company_sign ADD  CONSTRAINT ix_company_sign_001 UNIQUE NONCLUSTERED (user_id ASC, company_id ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
GO

ALTER TABLE "company_sign" ADD CONSTRAINT "fk_company_sig_user" FOREIGN KEY ("user_id") REFERENCES "user_acc" ("id");
ALTER TABLE "company_sign" ADD CONSTRAINT "fk_company_sig_role" FOREIGN KEY ("company_id") REFERENCES "company" ("id");
GO

CREATE TABLE company_sign_log (
  rev int NOT NULL,
  revType tinyint NOT NULL,
  id int NOT NULL,
  company_id int NULL,
  user_id int NULL,
  start_date datetime NULL,
  end_date datetime NULL,
CONSTRAINT [pk_company_sign_log] PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "company_sign_log" ADD CONSTRAINT "fk_company_sign_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "company_sign_log" ADD CONSTRAINT "fk_company_sign_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO

CREATE TABLE [dbo].comm_type(
	[id] [varchar](2) NOT NULL,
	[descr] [varchar](30) NULL,
CONSTRAINT [pk_comm_type] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

SET ANSI_PADDING OFF
GO

CREATE TABLE "comm_type_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
	[id] [varchar](2) NOT NULL,
	[descr] [varchar](30) NULL,
CONSTRAINT pk_comm_type_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "comm_type_log" ADD CONSTRAINT "fk_comm_type_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "comm_type_log" ADD CONSTRAINT "fk_comm_type_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO

ALTER TABLE [dbo].[user_acc]  WITH NOCHECK ADD  CONSTRAINT [fk_user_comm_type] FOREIGN KEY(prefer_comm_type)
REFERENCES [dbo].comm_type(id)
GO

ALTER TABLE [dbo].[user_acc] NOCHECK CONSTRAINT [fk_user_comm_type]
GO

INSERT INTO "comm_type" ("id", "descr") VALUES
('S', 'SMS'),
('E', 'EMAIL');


CREATE TABLE [dbo].personal_ref_type(
	[id] [varchar](3) NOT NULL,
	[descr] [varchar](30) NOT NULL,
CONSTRAINT [pk_personal_ref_type] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

CREATE TABLE "personal_ref_type_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
	[id] [varchar](3) NOT NULL,
	[descr] [varchar](30) NULL,
CONSTRAINT pk_personal_ref_type_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "personal_ref_type_log" ADD CONSTRAINT "fk_personal_ref_type_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "personal_ref_type_log" ADD CONSTRAINT "fk_personal_ref_type_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO

SET ANSI_PADDING OFF
GO

ALTER TABLE [dbo].[user_acc]  WITH NOCHECK ADD  CONSTRAINT [fk_user_personal_ref_type] FOREIGN KEY(personal_ref_type)
REFERENCES [dbo].personal_ref_type(id)
GO

ALTER TABLE [dbo].[user_acc] NOCHECK CONSTRAINT [fk_user_personal_ref_type]
GO

INSERT INTO "personal_ref_type" ("id", "descr") VALUES
('RSA', 'SOUTH AFRICAN ID'),
('P', 'PASSPORT'),
('OTH', 'OTHER');

CREATE TABLE [dbo].user_status(
	[id] [varchar](3) NOT NULL,
	[descr] [varchar](30) NULL,
CONSTRAINT [pk_user_status] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

SET ANSI_PADDING OFF
GO

ALTER TABLE [dbo].[user_acc]  WITH NOCHECK ADD  CONSTRAINT [fk_user_user_status] FOREIGN KEY([status])
REFERENCES [dbo].user_status(id)
GO

ALTER TABLE [dbo].[user_acc] NOCHECK CONSTRAINT [fk_user_user_status]
GO

ALTER TABLE [dbo].[user_acc]  WITH NOCHECK ADD  CONSTRAINT [fk_user_title] FOREIGN KEY([title])
REFERENCES [dbo].title(id)
GO

ALTER TABLE [dbo].[user_acc] NOCHECK CONSTRAINT [fk_user_title]
GO

INSERT INTO "user_status" ("id", "descr") VALUES
('PA', 'Pending Chamber Approval'),
('A', 'Approved'),
('D', 'Declined');

SET IDENTITY_INSERT "user_acc" ON ;
INSERT INTO "user_acc" ("id", "title", "first_name", "last_name", "display_name", "primary_email_address", "mobile_no", "prefer_comm_type", "username", "password", "personal_ref_type", "personal_ref_value", "account_non_expired", "account_non_locked", "credentials_non_expired", "enabled", "reserved", "password_expired", "activation_serial_no", "last_login_time", "status", "company_id") VALUES
(-99  ,NULL  ,'ANONYMOUS'  ,'ANONYMOUS'  ,'ANONYMOUS'  ,'no-reply@ecoo.co.za'  ,NULL  ,NULL  ,'anonymous'  ,'21232f297a57a5a743894a0e4a801fc3'  ,NULL  ,NULL ,1  ,1  ,1  ,1  ,0  ,0  ,''  ,NULL  ,'A'  , NULL),
(-98  ,NULL  ,'SYSTEM'  ,'ACCOUNT'  ,'SYSTEM ACCOUNT'  ,NULL  ,NULL  ,NULL  ,'sysaccount'  ,'21232f297a57a5a743894a0e4a801fc3'  ,NULL ,NULL  ,1  ,1  ,1  ,1  ,0  ,0  ,''  ,NULL  ,'A'  ,NULL),
(-97  ,NULL  ,'BATCH PROCESSOR'  ,'ACCOUNT'  ,'BATCH PROCESSOR ACCOUNT'  ,NULL  ,NULL  ,'E'  ,'batch'  ,'21232f297a57a5a743894a0e4a801fc3'  ,NULL ,NULL  ,1  ,1  ,1  ,1  ,0  ,0  ,''  ,NULL  ,'A'  ,NULL),
(-96  ,NULL  ,'MOBILE'  ,'APP'  ,'MOBILE APP'  ,NULL  ,NULL  ,'E'  ,'mobile'  ,'1DECF8C589D5751C639229B33AA6C1E2'  ,NULL ,NULL  ,1  ,1  ,1  ,1  ,0  ,0  ,''  ,NULL  ,'A'  ,NULL),
(1  ,NULL  ,'SYSTEM'  ,'ADMINISTRATION'  ,'SYSTEM ADMINISTRATION'  ,'system@s-squared.co.za'  ,NULL  ,'E'  ,'admin'  ,'21232f297a57a5a743894a0e4a801fc3'  ,'OTH'  ,'admin' ,1  ,1  ,1  ,1  ,1  ,0  ,'a4e6d213-c745-4152-94e2-99577bfb360d'  ,NULL  ,'A'  ,NULL),
(2  ,NULL  ,'LINDA'  ,'HOLTES'  ,'LINDA HOLTES'  ,'linda@uasalesonline.com'  ,NULL  ,'E'  ,'linda@uasalesonline.com'  ,'fe01ce2a7fbac8fafaed7c982a04e229'  ,NULL ,NULL ,1  ,1  ,1  ,1  ,1  ,0  ,'a4e6d213-c745-4152-94e2-99577bfb360d'  ,NULL  ,'A'  ,NULL),
(3  ,NULL  ,'LINDA'  ,'BLACKBEARD'  ,'LINDA LOUISE BLACKBEARD'  ,'support@s-squared.co.za'  ,NULL  ,'E'  ,'admin@rcci.co.za'  ,'fe01ce2a7fbac8fafaed7c982a04e229'  ,'RSA'  ,'5305160111082' ,1  ,1  ,1  ,1  ,1  ,0  ,'a4e6d213-c745-4152-94e2-99577bfb360d'  ,NULL  ,'A'  ,NULL),
(4  ,NULL  ,'JACQUELINE'  ,'CHANDA'  ,'JACQUELINE SIMAPUKA CHANDA'  ,'support@s-squared.co.za'  ,NULL  ,'E'  ,'manager@rcci.co.za'  ,'fe01ce2a7fbac8fafaed7c982a04e229'  ,'OTH'  ,'ZN017569' ,1  ,1  ,1  ,1  ,1  ,0  ,'a4e6d213-c745-4152-94e2-99577bfb360d'  ,NULL  ,'A'  ,NULL);
SET IDENTITY_INSERT "user_acc" OFF;

CREATE TABLE "user_signature" (
  "id" int IDENTITY(1,1) NOT NULL,
  "user_id" int NOT NULL,
  "encoded_image" nvarchar(max) NOT NULL,
  "eff_from_date" datetime NOT NULL,
  "eff_to_date" datetime NOT NULL,
CONSTRAINT [pk_user_signature] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO


ALTER TABLE [dbo].user_signature  WITH NOCHECK ADD  CONSTRAINT [fk_user_signature_user] FOREIGN KEY(user_id) REFERENCES [dbo].user_acc(id)
GO

ALTER TABLE [dbo].user_signature NOCHECK CONSTRAINT [fk_user_signature_user]
GO


CREATE TABLE [dbo].[user_signature_log](
	[rev] int NOT NULL,
	[revType] tinyint NOT NULL,
	[id] [int] NOT NULL,
	[user_id] int NULL,
  "encoded_image" nvarchar(max) NULL,
  "eff_from_date" datetime NULL,
  "eff_to_date" datetime NULL,
 CONSTRAINT [pk_user_signature_log] PRIMARY KEY CLUSTERED 
(
	[rev] ASC,
	[id] ASC
)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
) ON [PRIMARY]

GO

SET ANSI_PADDING OFF
GO

ALTER TABLE [dbo].[user_signature_log]  WITH NOCHECK ADD  CONSTRAINT [fk_user_signature_log_revision] FOREIGN KEY([rev]) REFERENCES [dbo].[revision] ([id])
GO

ALTER TABLE [dbo].[user_signature_log] CHECK CONSTRAINT [fk_user_signature_log_revision]
GO

CREATE TABLE "user_role" (
  "id" int IDENTITY(1,1) NOT NULL,
  "user_id" int NULL,
  "role" varchar(20) NOT NULL,
CONSTRAINT [pk_user_role] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

CREATE TABLE "user_role_log" (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
  "id" int NOT NULL,
  "user_id" int NULL,
  "role" varchar(20) NULL,
CONSTRAINT pk_user_role_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "user_role_log" ADD CONSTRAINT "fk_user_role_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE "user_role_log" ADD CONSTRAINT "fk_user_role_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO

SET IDENTITY_INSERT "user_role" ON ;
INSERT INTO "user_role" ("id", "user_id", "role") VALUES
(1, 1, 'ROLE_SYSADMIN'); -- admin
SET IDENTITY_INSERT "user_role" OFF;

ALTER TABLE "user_role" ADD CONSTRAINT "fk_user_role_user" FOREIGN KEY ("user_id") REFERENCES [user_acc]("id") ON DELETE CASCADE;

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING OFF
GO

CREATE TABLE "chamber_user" (
  id int IDENTITY(1,1) NOT NULL,
  chamber_id smallint NOT NULL,
  user_id int NOT NULL,
  start_date datetime NOT NULL,
  end_date datetime NOT NULL,
CONSTRAINT [pk_chamber_user] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE "chamber_user" ADD CONSTRAINT "fk_chamber_user_chamber" FOREIGN KEY (chamber_id) REFERENCES chamber ("id");  
ALTER TABLE "chamber_user" ADD CONSTRAINT "fk_chamber_user_user" FOREIGN KEY (user_id) REFERENCES user_acc ("id");
GO

CREATE TABLE chamber_user_log (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
  id int NOT NULL,
  chamber_id smallint NOT NULL,
  user_id int NULL,
  start_date datetime NULL,
  end_date datetime NULL,
CONSTRAINT pk_chamber_user_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE chamber_user_log ADD CONSTRAINT "fk_chamber_user_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE chamber_user_log ADD CONSTRAINT "fk_chamber_user_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO


CREATE TABLE "chamber_admin" (
  id int IDENTITY(1,1) NOT NULL,
  chamber_id smallint NOT NULL,
  user_id int NOT NULL,
  start_date datetime NOT NULL,
  end_date datetime NOT NULL,
CONSTRAINT [pk_chamber_admin] PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE chamber_admin ADD CONSTRAINT "fk_chamber_admin_chamber" FOREIGN KEY (chamber_id) REFERENCES chamber ("id");  
ALTER TABLE chamber_admin ADD CONSTRAINT "fk_chamber_admin_user" FOREIGN KEY (user_id) REFERENCES user_acc ("id");
GO

INSERT INTO chamber_admin VALUES(1,1 /*SYS ADMIN*/,GETDATE(),'9999/12/31');
INSERT INTO chamber_admin VALUES(1,2 /*LINDA HOLTES*/,GETDATE(),'9999/12/31');
INSERT INTO chamber_admin VALUES(1,3 /*LINDA BLACKBEARD*/,GETDATE(),'9999/12/31');
INSERT INTO chamber_admin VALUES(1,4 /*JACQUELINE*/,GETDATE(),'9999/12/31');
GO

CREATE TABLE chamber_admin_log (
  "rev" int NOT NULL,
  "revType" tinyint NOT NULL,
  id int NOT NULL,
  chamber_id smallint NOT NULL,
  user_id int NULL,
  start_date datetime NULL,
  end_date datetime NULL,
CONSTRAINT pk_chamber_admin_log PRIMARY KEY CLUSTERED 
([rev] ASC,[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE chamber_admin_log ADD CONSTRAINT "fk_chamber_admin_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");  
ALTER TABLE chamber_admin_log ADD CONSTRAINT "fk_chamber_admin_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");
GO

-- =====================================================================================
-- METRIC
-- =====================================================================================
CREATE TABLE [dbo].[metric_type](
	[id] [varchar](3) NOT NULL,
	[name] [varchar](50) NOT NULL,
	[descr] [varchar](255) NOT NULL,
 CONSTRAINT [pk_metric_type] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
) ON [PRIMARY]
GO

INSERT INTO [dbo].[metric_type] ("id", "name", "descr") VALUES
('EXP', 'Test','The description.');

SET ANSI_PADDING OFF
GO


SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING OFF
GO

CREATE TABLE [dbo].[metric](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[user_id] int NULL,
	[type_id] [varchar](3) NOT NULL,
	[value] [varchar](50) NOT NULL,
	[last_updated] [datetime] NULL,
 CONSTRAINT [pk_metric] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
) ON [PRIMARY]
GO

SET ANSI_PADDING OFF
GO

ALTER TABLE [dbo].[metric]  WITH NOCHECK ADD  CONSTRAINT [fk_metric_metric_type] FOREIGN KEY([type_id])
REFERENCES [dbo].[metric_type] ([id])
GO

ALTER TABLE [dbo].[metric] CHECK CONSTRAINT [fk_metric_metric_type]
GO

ALTER TABLE [dbo].[metric]  WITH NOCHECK ADD  CONSTRAINT [fk_metric_user_acc] FOREIGN KEY([user_id])
REFERENCES [dbo].[user_acc] ([id])
GO

ALTER TABLE [dbo].[metric] CHECK CONSTRAINT [fk_metric_user_acc]
GO


CREATE TABLE [dbo].[metric_log](
	[rev] int NOT NULL,
	[revType] tinyint NOT NULL,
	[id] [int] NOT NULL,
	[user_id] [smallint] NULL,
	[type_id] [varchar](3) NULL,
	[value] [varchar](50) NULL,
	[last_updated] [datetime] NULL,
 CONSTRAINT [pk_metric_log] PRIMARY KEY CLUSTERED 
(
	[rev] ASC,
	[id] ASC
)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
) ON [PRIMARY]

GO

SET ANSI_PADDING OFF
GO

ALTER TABLE [dbo].[metric_log]  WITH NOCHECK ADD  CONSTRAINT [fk_metric_log_revision] FOREIGN KEY([rev])
REFERENCES [dbo].[revision] ([id])
GO

ALTER TABLE [dbo].[metric_log] CHECK CONSTRAINT [fk_metric_log_revision]
GO


--
-- Indexes for table "feature"
--  
ALTER TABLE [dbo].feature ADD  CONSTRAINT ux_feature_name UNIQUE NONCLUSTERED (name ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
GO

--
-- Constraints for table "country_log"
--
ALTER TABLE "country_log"
  ADD CONSTRAINT "fk_country_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");
  
ALTER TABLE "country_log"
  ADD CONSTRAINT "fk_country_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");

--
-- Constraints for table "endpoint_stat"
--
ALTER TABLE "endpoint_stat"
  ADD CONSTRAINT "fk_endpoint_stat_endpoint" FOREIGN KEY ("endpoint_id") REFERENCES "endpoint" ("id");

--
-- Constraints for table "feature_log"
--
ALTER TABLE "feature_log"
  ADD CONSTRAINT "fk_feature_log_rev" FOREIGN KEY ("rev") REFERENCES "revision" ("id");
  
ALTER TABLE "feature_log"
  ADD CONSTRAINT "fk_feature_log_rev_type" FOREIGN KEY ("revType") REFERENCES "rev_type" ("id");



-- =====================================================================================
-- UPLOAD
-- =====================================================================================
CREATE TABLE [dbo].[upload_type](
	[id] [varchar](3) NOT NULL,
	[name] [varchar](50) NOT NULL,
	last_upload_date [datetime] NULL,
 CONSTRAINT [pk_upload_type] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY],
 CONSTRAINT [UC_upload_type] UNIQUE NONCLUSTERED 
(
	[Name] ASC
)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
) ON [PRIMARY]

GO


CREATE TABLE [dbo].[upload_status](
	[id] [tinyint] NOT NULL,
	[descr] [varchar](30) NOT NULL,
 CONSTRAINT [pk_upload_status] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
) ON [PRIMARY]

GO

SET ANSI_PADDING OFF
GO

CREATE TABLE [dbo].[upload_map](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	upload_type_id [varchar](3) NOT NULL,
	name [varchar](100) NOT NULL,
	has_heading [bit] NOT NULL,
 CONSTRAINT [pk_upload_map] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].upload_map ADD CONSTRAINT ux_upload_map_001 UNIQUE NONCLUSTERED ([upload_type_id] ASC,[name] ASC)
WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

CREATE TABLE [dbo].[upload_map_detail](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	map_id [int] NOT NULL,
	csv_column_index [int] NULL,
	table_column_name [varchar](50) NULL,
 CONSTRAINT [pk_upload_map_detail] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[upload_map_detail]  WITH NOCHECK ADD  CONSTRAINT [fk_upload_map_detail_upload_map] FOREIGN KEY(map_id)
REFERENCES [dbo].[upload_map] ([id])
ON DELETE CASCADE
GO

ALTER TABLE [dbo].[upload_map_detail] CHECK CONSTRAINT [fk_upload_map_detail_upload_map]
GO

CREATE TABLE [dbo].[upload](
	id [bigint] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	file_name [varchar](255) NOT NULL,
	upload_type [varchar](3) NOT NULL,
	map_id [int] NULL,
	start_time [datetime] NULL,
	end_time [datetime] NULL,
	status [tinyint] NOT NULL,
	comment [varchar](1024) NULL,
 CONSTRAINT [pk_upload] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]
) ON [PRIMARY]

GO

ALTER TABLE [dbo].[upload]  WITH NOCHECK ADD  CONSTRAINT [fk_upload_upload_map] FOREIGN KEY(map_id)
REFERENCES [dbo].[upload_map] (id)
GO

ALTER TABLE [dbo].[upload] CHECK CONSTRAINT [fk_upload_upload_map]
GO

ALTER TABLE [dbo].[upload]  WITH NOCHECK ADD  CONSTRAINT [fk_upload_upload_status] FOREIGN KEY([status])
REFERENCES [dbo].[upload_status] (id)
GO

ALTER TABLE [dbo].[upload] CHECK CONSTRAINT [fk_upload_upload_status]
GO

ALTER TABLE [dbo].[upload]  WITH NOCHECK ADD  CONSTRAINT [fk_upload_upload_type] FOREIGN KEY(upload_type)
REFERENCES [dbo].[upload_type] (id)
GO

ALTER TABLE [dbo].[upload] CHECK CONSTRAINT [fk_upload_upload_type]
GO

INSERT INTO [ecoo].[dbo].[upload_type]
           ([id]
           ,[name]
           ,[last_upload_date])
VALUES('E','Example',NULL)
GO

INSERT INTO [ecoo].[dbo].[upload_status]
           ([id]
           ,[descr])
VALUES (1,'Running'),
(2,'Upload Failed'),
(3,'Upload Successful'),
(4,'Upload Partial'),
(5,'Parsing Successful'),
(6,'Parsing Partial'),
(7,'Parsing Failed'),
(8,'Ready'),
(9,'Marked As New'),
(10,'Marked As Ignore'),
(11,'Exported'),
(12,'Importing'),
(13,'Import Failed'),
(14,'Imported'),
(15,'Exporting'),
(16,'Scheduled'),
(17,'Queued')
GO


-- =====================================================================================
-- SHIPMENT
-- =====================================================================================
CREATE TABLE [dbo].shipment_status(
	[id] [varchar](3) NOT NULL,
	[descr] [varchar](100) NOT NULL,
CONSTRAINT pk_shipment_status
PRIMARY KEY CLUSTERED 
([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

INSERT INTO shipment_status ("id", "descr") VALUES
('N', 'New & Pending Submission'),
('SPA', 'Submitted & Pending Chamber Approval'),
('APP', 'Approved & Pending Payment'),
('D', 'Declined'),
('C', 'Cancelled');
GO

CREATE TABLE [ecoo].[dbo].[shipment](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[chamber_id] [smallint] NOT NULL,
	[export_ref] [varchar](50) NOT NULL,
	[export_inv_no] [varchar](50) NULL,
	[export_inv_date] [datetime] NULL,
	[buyer_ref] [varchar](50) NULL,
	[buyer_order_date] [datetime] NULL,
	[letter_credit_no] [varchar](50) NULL,
	[ucr_no] [varchar](50) NULL,
	[consignee_name] [varchar](200) NOT NULL,
	[consignee_building] [varchar](100) NULL,
	[consignee_street] [varchar](100) NULL,
	[consignee_city] [varchar](100) NULL,
	[consignee_postcode] [varchar](10) NULL,
	[consignee_province] [varchar](100) NULL,
	[consignee_country] [varchar](100) NULL,	
	[buyer_name] [varchar](200) NULL,	
	[buyer_building] [varchar](100) NULL,
	[buyer_street] [varchar](100) NULL,
	[buyer_city] [varchar](100) NULL,
	[buyer_postcode] [varchar](10) NULL,
	[buyer_province] [varchar](100) NULL,
	[buyer_country] [varchar](100) NULL,
	[place_of_issue] [varchar](100) NOT NULL,
	[date_of_issue] [datetime] NOT NULL,
	[date_submitted] [datetime] NOT NULL,
	[status] [varchar](3) NOT NULL,
	[owner] [smallint] NOT NULL,
	[process_instance_id] [varchar](50) NULL,
CONSTRAINT [pk_shipment] PRIMARY KEY CLUSTERED ([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE [shipment] ADD CONSTRAINT "fk_shipment_chamber" FOREIGN KEY (chamber_id) REFERENCES chamber ("id");  
ALTER TABLE [shipment] ADD CONSTRAINT "fk_shipment_status" FOREIGN KEY ([status]) REFERENCES [shipment_status] ("id");

CREATE TABLE [dbo].[shipment_log](
	[rev] int NOT NULL,
	[revType] tinyint NOT NULL,
	[id] [int] NOT NULL,
	[chamber_id] [smallint] NULL,
	[export_ref] [varchar](50) NULL,
	[export_inv_no] [varchar](50) NULL,
	[export_inv_date] [datetime] NULL,
	[buyer_ref] [varchar](50) NULL,
	[buyer_order_date] [datetime] NULL,
	[letter_credit_no] [varchar](50) NULL,	
	[ucr_no] [varchar](50) NULL,
	[consignee_name] [varchar](200) NULL,	
	[consignee_building] [varchar](100) NULL,
	[consignee_street] [varchar](100) NULL,
	[consignee_city] [varchar](100) NULL,
	[consignee_postcode] [varchar](100) NULL,
	[consignee_province] [varchar](10) NULL,
	[consignee_country] [varchar](100) NULL,	
	[buyer_name] [varchar](200) NULL,	
	[buyer_building] [varchar](100) NULL,
	[buyer_street] [varchar](100) NULL,
	[buyer_city] [varchar](100) NULL,
	[buyer_postcode] [varchar](10) NULL,
	[buyer_province] [varchar](100) NULL,
	[buyer_country] [varchar](100) NULL,	
	[place_of_issue] [varchar](100) NULL,
	[date_of_issue] [datetime] NULL,
	[date_submitted] [datetime] NULL,
	[status] [varchar](3) NULL,
	[owner] [smallint] NULL,
	[process_instance_id] [varchar](50) NULL,
CONSTRAINT [pk_shipment_log] PRIMARY KEY CLUSTERED ([rev] ASC,	[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[shipment_log]  WITH NOCHECK ADD  CONSTRAINT [fk_shipment_log_revision] FOREIGN KEY([rev]) REFERENCES [dbo].[revision] ([id])
ALTER TABLE [dbo].[shipment_log] CHECK CONSTRAINT [fk_shipment_log_revision]

ALTER TABLE [dbo].[shipment_log]  WITH NOCHECK ADD  CONSTRAINT [fk_shipment_log_rev_type] FOREIGN KEY([revType]) REFERENCES [dbo].[rev_type] ([id])
ALTER TABLE [dbo].[shipment_log] CHECK CONSTRAINT [fk_shipment_log_rev_type]
GO

CREATE TABLE [ecoo].[dbo].[shipment_comment](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[shipment_id] [int] NOT NULL,
	[user_id] [int] NOT NULL,
	[text] [varchar](max) NOT NULL,
	[date_created] [datetime] NOT NULL,
CONSTRAINT [pk_shipment_comment] PRIMARY KEY CLUSTERED ([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE [shipment_comment] ADD CONSTRAINT "fk_shipment_comment_shipment" FOREIGN KEY (shipment_id) REFERENCES shipment ("id");  
ALTER TABLE [shipment_comment] ADD CONSTRAINT "fk_shipment_comment_user_acc" FOREIGN KEY (user_id) REFERENCES user_acc ("id");  
GO


----------------------------------------------------------------------------------------------------------------
-- COMMERCIAL INVOICE
----------------------------------------------------------------------------------------------------------------
CREATE TABLE [ecoo].[dbo].[doc_comm_inv](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[shipment_id] [int] NOT NULL,
	[product_code] [varchar](50) NULL,
	[descr] [varchar](100) NULL,
	[qty] [tinyint] NOT NULL,
	[price] [decimal](19,4) NOT NULL,
	[amount] [decimal](19,4) NOT NULL,
CONSTRAINT [pk_doc_comm_inv] PRIMARY KEY CLUSTERED ([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE doc_comm_inv ADD CONSTRAINT "fk_doc_comm_inv_shipment" FOREIGN KEY ([shipment_id]) REFERENCES [shipment] ("id");
GO  

CREATE TABLE [dbo].[doc_comm_inv_log](
	[rev] int NOT NULL,
	[revType] tinyint NOT NULL,
	[id] [int] NOT NULL,
	[shipment_id] [int] NULL,
	[product_code] [varchar](50) NULL,
	[descr] [varchar](100) NULL,
	[qty] [tinyint] NULL,
	[price] [decimal](19,4) NULL,
	[amount] [decimal](19,4) NULL,
CONSTRAINT [pk_doc_comm_inv_log] PRIMARY KEY CLUSTERED ([rev] ASC,	[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[doc_comm_inv_log]  WITH NOCHECK ADD  CONSTRAINT [fk_doc_comm_inv_log_revision] FOREIGN KEY([rev]) REFERENCES [dbo].[revision] ([id])
ALTER TABLE [dbo].[doc_comm_inv_log] CHECK CONSTRAINT [fk_doc_comm_inv_log_revision]

ALTER TABLE [dbo].[doc_comm_inv_log]  WITH NOCHECK ADD  CONSTRAINT [fk_doc_comm_inv_log_rev_type] FOREIGN KEY([revType]) REFERENCES [dbo].[rev_type] ([id])
ALTER TABLE [dbo].[doc_comm_inv_log] CHECK CONSTRAINT [fk_doc_comm_inv_log_rev_type]
GO


----------------------------------------------------------------------------------------------------------------
-- CERTIFICATE OF ORIGIN
----------------------------------------------------------------------------------------------------------------
CREATE TABLE [ecoo].[dbo].[doc_coo](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[shipment_id] [int] NOT NULL,
	[marks] [varchar](50) NULL,
	[box_no] [varchar](50) NULL,
	[descr] [varchar](100) NULL,
	[tariff_code] [varchar](100) NULL,
	[gross_weight] [decimal](19,4) NOT NULL
CONSTRAINT [pk_doc_coo] PRIMARY KEY CLUSTERED ([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE doc_coo ADD CONSTRAINT "fk_doc_coo_shipment" FOREIGN KEY ([shipment_id]) REFERENCES [shipment] ("id");
GO  
 

CREATE TABLE [dbo].[doc_coo_log](
	[rev] int NOT NULL,
	[revType] tinyint NOT NULL,
	[id] [int] NOT NULL,
	[shipment_id] [int] NULL,
	[marks] [varchar](50) NULL,
	[box_no] [varchar](50) NULL,
	[descr] [varchar](100) NULL,
	[tariff_code] [varchar](100) NULL,
	[gross_weight] [decimal](19,4) NULL
CONSTRAINT [pk_doc_coo_log] PRIMARY KEY CLUSTERED ([rev] ASC, [id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[doc_coo_log]  WITH NOCHECK ADD  CONSTRAINT [fk_doc_coo_log_revision] FOREIGN KEY([rev]) REFERENCES [dbo].[revision] ([id])
ALTER TABLE [dbo].[doc_coo_log] CHECK CONSTRAINT [fk_doc_coo_log_revision]

ALTER TABLE [dbo].[doc_coo_log]  WITH NOCHECK ADD  CONSTRAINT [fk_doc_coo_log_rev_type] FOREIGN KEY([revType]) REFERENCES [dbo].[rev_type] ([id])
ALTER TABLE [dbo].[doc_coo_log] CHECK CONSTRAINT [fk_doc_coo_log_rev_type]
GO


----------------------------------------------------------------------------------------------------------------
-- PACKING LIST
----------------------------------------------------------------------------------------------------------------
CREATE TABLE [ecoo].[dbo].[doc_pack_list](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[shipment_id] [int] NOT NULL,
	[product_code] [varchar](50) NULL,
	[descr] [varchar](100) NULL,
	[qty] [tinyint] NOT NULL,
	[net_weight] [decimal](19,4) NOT NULL,
	[gross_weight] [decimal](19,4) NOT NULL,
	[volume] [decimal](19,4) NOT NULL,
CONSTRAINT [pk_doc_pack_list] PRIMARY KEY CLUSTERED ([id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE doc_pack_list ADD CONSTRAINT "fk_doc_pack_list_shipment" FOREIGN KEY ([shipment_id]) REFERENCES [shipment] ("id");
GO  

CREATE TABLE [dbo].[doc_pack_list_log](
	[rev] int NOT NULL,
	[revType] tinyint NOT NULL,
	[id] [int] NOT NULL,
	[shipment_id] [int] NULL,
	[product_code] [varchar](50) NULL,
	[descr] [varchar](100) NULL,
	[qty] [tinyint] NULL,
	[net_weight] [decimal](19,4) NULL,
	[gross_weight] [decimal](19,4) NULL,
	[volume] [decimal](19,4) NULL,
CONSTRAINT [pk_doc_pack_list_log] PRIMARY KEY CLUSTERED ([rev] ASC,	[id] ASC)WITH (PAD_INDEX  = ON, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON, FILLFACTOR = 85) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[doc_pack_list_log]  WITH NOCHECK ADD  CONSTRAINT [fk_doc_pack_list_log_revision] FOREIGN KEY([rev]) REFERENCES [dbo].[revision] ([id])
ALTER TABLE [dbo].[doc_pack_list_log] CHECK CONSTRAINT [fk_doc_pack_list_log_revision]

ALTER TABLE [dbo].[doc_pack_list_log]  WITH NOCHECK ADD  CONSTRAINT [fk_doc_pack_list_log_rev_type] FOREIGN KEY([revType]) REFERENCES [dbo].[rev_type] ([id])
ALTER TABLE [dbo].[doc_pack_list_log] CHECK CONSTRAINT [fk_doc_pack_list_log_rev_type]
GO

----------------------------------------------------------------------------------------------------------------
-- POPULATE AUDIT TABLES
----------------------------------------------------------------------------------------------------------------
DECLARE @revisionId INT
INSERT INTO revision VALUES(1,'1493368646354',GETDATE())
SET @revisionId = @@IDENTITY

INSERT INTO feature_log(rev,revType,id,name,value,descr)
SELECT 1,0,id,name,value,descr FROM feature;
GO

/**
TEST Data: Please REMOVE
*/
INSERT INTO dbo.user_signature VALUES(1,'',GETDATE(),'9999/12/31')
GO

--update user_signature set encoded_image=''

-- 
-- iVBORw0KGgoAAAANSUhEUgAAAfQAAADoCAIAAACW14GJAAAAA3NCSVQFBgUzC42AAAANOElEQVR4\nnO3dX2iddZrA8fddWjgBCzmgkILCJuyALQ4YccEUvelc2aJgAgPTwoK2Cjt2B2Z1L3bamQtpR3BS\nB9ZmBjTVC2mEWRJhpL1Y0LlwaC9c0gGXZmCGRFBIQCEBhRxo4d2L0znbPXlzcnL+vOfkOZ/PXZPT\n930jOV+f/s77J82yLAEglr/r9QEA0HniDhCQuAMEJO4AAYk7QEDiDhCQuAMEJO4AAYk7QEDiDhCQ\nuAMEJO4AAYk7QEDiDhCQuAMEJO4AAYk7QEDiDhCQuAMEJO4AAYk7QEDiDhCQuAMEJO4AAYk7QEDi\nDhCQuAMEJO4AAYk7QEDiDhCQuAMEJO4AAYk7QEDiDhCQuAMEJO4AAYk7QEDiDhCQuAMEJO4AAYk7\nQEDiDhCQuAMEJO4AAYk7QEDiDhCQuAMEJO4AAYk7QEDiDhCQuAMEJO4AAYk7QEDiDhCQuAMEJO4A\nAYk7QEDiDhCQuAMEJO4AAYk7QEDiDhCQuNPvTr90uvxAOW1C+WB55q2ZXh8v9IU0y7JeHwPkGBsd\nW/lipeW/vv7t+vB9wx08HthbTO70l7kP5qpjeDtlT5KkfKDcqUOCvWhfrw8A7krTtNeHAHGY3Om9\n6pJ6r48CQhF3eixN041vNhq/ZuLJiek3p7OG5hfmDz18qPr64fuHfZjEgPOBKr3UeGA/9eKp2bdn\nCzsYiMSaOz3ToOxmDmiTZRl6I92fU/bSfaXqGkvxxwPBmNzpgaW/LiV36r+o6dBB1tzpga0LMn4P\nobMsy1C08gP1lxfNvutTU+gwkztFM7ZDAUzuFOqxf3ys7ivK3kE3/3Rz7v25BvdWOzJxpNfHSEFM\n7hSqfmzfl2S3/Qa2YuHDhanJqdb+rnf9IDC500vK3ryLv7547wzectkZEE6FhD716s9evfj6xV4f\nBXuVuEO/WPli5fgzx5f+Z6mrexl/fLyr26dPWJaBXjr+7PHaSsvY6Fi3yz7xxMTiZ4td3QV9wgeq\nFKruA9XB/PWbeWfmzEtnerX34fuH179e79XeKYzJHYqwsbFRm9B7WPYkSTa+2bjwqws9PACKYXKn\nUAM1ud/8083HxuvP6+8T6+vrw8OeMRuZyZ341r5ZK2xfCx8u1Cb0bpf92DPHrt+4XntcSe5rzr92\nPsuy4fvrO14ue8ZscOJOL838dqar2z/9wuk0TQ8+cLBa2y7tpfZQ726ffj7x5MT6t+u1ml/9/dWJ\nJyaq38r96Wbfnj3787NJkuQusl98y3mWkVmWoVB1DZr80eT83Hxhu0uSZPnL5dEHRzuy8XK5vLGx\nwwMC29fM46hyy3712tVjTx9r/DJv/8BM7hTq6NNH7/3jwgcLBR/A2ENjR55q/f4qJ//pZG1I717Z\nZ9+drY3njcv+yR8/yS379RvX68qeJMn6upNkBojJnaIV+ZlqR57kd+SpIzf+eKNDR7Stjz/9+OiT\nR3d+3T3KD5Rzny2++Pni+CP5VyrV/QfZvL1Z2lfa1U7ZK0zu9NjCh10c3hsUvPES/MHRg7UJvXtl\nX15Zrk3ouyp7pVJJ0zS37Ovr69uVfavVr1ab3yl7i8mdovVk5Xe7lNd2vfHdRvlAESeQzL47e+r5\nU+1soZ1/joyNjq18sbKrv8IeZXKnaOvf1q/8fvKHT7q90yzLRkZGtn69Np53tewjD47UJvR2yl49\n+We77zaT6ek3p1veO3uLuFO0rRn9wdEfFLDf1dXVV376SgE7qjn772erQV/9st3Vj7Vv1tI0vfze\n5dzvHn36aJMD+ORzk20eCXuFuFOchY8Wths8L/66K+dcX37v8r33QO/SXurULiw6/8vzHdlg9VT9\n7b6bZdnH1z7uyI6IRNwpyIXXL0w9u+0FPq/+66ttbv/Gf98494tzdU+VO/3C6TY326x9yfrXdy8v\nql1Y1L6pH041WIe59JtLVszZjg9UKciOF4hOPDlx/dPrzWzq9I9Pb363Off+XCeOqy2j/zC6/Jfl\nbmx56sRU44sAWn7nDtTtfQaZuFOQ7l39X7wTz5+48u6Vbmy5UqkMDQ01fk2b71lxHxCWZWDX5t6b\nG/veWAc3WLlTSfenaZo2Lvv0f0xrMU0yuVOQHk7u1V/ylg9g8ebi+KPjO54p35rmj6pTb1WT+4Aw\nuVOQAiJSuq80/uh4tkVrW6udnD7+aKMLPquf3FYqlea3fPGti7WPfHd+9b6knZ+CgWVyp2hHjh65\n8Yd2L+ifeGJi6MDQx/+1i1MAdzW55z7LopktjIyMXJn723L8/mQoGdq8vZkkyZmfnNnt81FHHhxp\n/wT5rUzuA0Lc6b10f5rcqf9iB+/Ne3cvnVgAKWZxafGzxfHHm70/zG6J+4CwLEPvZbdz+jL20Nja\nWiefoHT9s6bOs0yS5PI7+ReCJsndFZKtDzbqiKvXrt5dCOpa2Rkc4k5fyJ0fDx482MF7pk88PjG/\n0NSDQU6/tMOlT9XrlbbeML01q1+vVpveqQ02cPn9bf+/RTDiTr/I7Xu5XN74rmN9n3xuMsuyK7/7\nv1PU5xfmsyzb3Nzcut8dt1YdtM++draFIxkZGdnc3Kw2feT+nDuadcm5X5wrbF/0ljV3+kvuovb0\nG9Ov/Ft37/nV/o2Il/68tLS0NHViKtnmxJljTx+bfnP60MOHWjvCjqj7Med/Pz/5jFuJxSTu9J3c\nvnfp1JGayp3K0P76C4jivTt8mjo4LMvQd3KLs/bVWpqmHVyiqVPaVyoN1z9wrrOf6PZc3WM6iM3k\nTp9qcNLhraVbXVrc6MlTogoT+6ejjsmdPtWgO4cPHU7TtBsPX916Os3QgR1u47V3Ld5c7PUh0EUm\nd/ra4UOHl/68w4WdnR3kA4+3FtwHismdvnZr6daODaoO8lVnfnKmzXX5rbuLcbPi488e7/UhUChx\nZw/IsuzqtavNvHLmrZnygXKt9UeeOrKrW3pVnXj+RN1XDn//8G430m+ufXTt3j928HFR9CfLMuwl\nS39dOvy9Vjq729/zeIsz1mQGjbiz9+Sek76jQe57pJ+FJlmWYe8p7StVL9xfX1/v3l4OPVL/Ie3J\nF052b3dFmn5zuteHQNeZ3Inj4EMH177Kv+zo5Z++fOnNS7vd4NaBd/3b9eH7unJLyO4xtg8mkztx\nrH65eu8DmM7/8nypVEqS5OxrZ1soe5IXwfKBnW8o1le2fhQ8/YaxfSCY3KGR3PMg98q7ZkBumEMu\nkzs0kpvCC69fKP5IWqDsg8zkDjvY2NjYenv3/n/jHP7+4bqntk48MXH9RrOPo2KvM7nDDoaHh8+/\ncb7ui31+2erKVytbn8et7APF5A5N2VuL786QweQOTcmNY7q/H+f3nP8P7evFcdBT4g7Nyun7nWTq\nh1O9OJZt5f8L47axfeCIO+zC1r4v/OfCzDszPTmYrfbW2hFdJe6wO6dePFX3lTMvnZn7YK4nB1NT\nqVRyy768slz8wdAPxB12Z/bt2a1L2CdPnDz3s3O9OJwkSZK5D+aGhnLupLZ4c3H070eLPx76gbNl\noBW5Y/Lkjybn5+of1Ndt2z2savHzxfFHxgs+GPqHuEOLcvt+6OFDt5Zu9fYYkr15gzM6S9yhdblt\nLZVKm5ub3d517nWzVd7UJOIObdpudu7qO6vB9bHe0VT5QBXakmVZ9cbCddI03dho61HduarPhs39\nVum+krJTI+7Qrs3Nza2PbUqSpFwud+oWNJU7lQZZT5Jk+cvlzW+7vhbEHiLu0AG3Pr916vn689+r\n0jSd+W3rVzlVT2Bv/MzYLMtGH3TKI/+PuENnzL47O/v2bO63zvz4TJqml9+7vKsNrn2zlqZp7gns\nNadePGUphlw+UIUOa7wUUyqVrsxdmXxucrsXXPvo2tSJqcp3lcZ7GRkZWV1dbfEQGQAmd+iwLMte\n/peXt/tupVKZmpxK/6b8QPn4s8fTexx/9njjso8/Pp5lmbLTmMkduqXjD/Q4/9r5sz8/29ltEpW4\nQxdtfLdRPpB/qdGuXPrNpZf/edt/DcBW4g5FaHmKdyMBWmPNHYqQZVl1obyZ2zQO3z+8vLJc/SvK\nTmtM7tAzF3514fqn15MkKZVK878r+naSxCbuAAFZlgEISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDE\nHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3\ngIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwB\nAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcI\nSNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAg\ncQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDEHSAgcQcISNwBAhJ3gIDE\nHSAgcQcISNwBAhJ3gID+Fy3VhGddrxoYAAAAAElFTkSuQmCC
-- meprE8E&H&6-qu5eSuN3

