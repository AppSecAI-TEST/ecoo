<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>

    <sql-query name="FIND_DOCUMENT_BY_CHAMBER_AND_TYPE">
        <return class="ecoo.data.ChamberDocument"/>
        <![CDATA[
            select distinct cd.* from dbo.chamber_doc cd with(nolock)
            where cd.chamber_id = :chamberId
            and cd.doc_type = :documentType
	  	]]>
    </sql-query>

    <sql-query name="FIND_DOCUMENTS_BY_CHAMBER">
        <return class="ecoo.data.ChamberDocument"/>
        <![CDATA[
            select distinct cd.* from dbo.chamber_doc cd with(nolock)
            where cd.chamber_id = :chamberId
	  	]]>
    </sql-query>

    <sql-query name="FIND_DOCUMENT_BY_USER_AND_TYPE">
        <return class="ecoo.data.UserDocument"/>
        <![CDATA[
            select distinct cd.* from dbo.user_doc cd with(nolock)
            where cd.user_id = :userId
            and cd.doc_type = :documentType
	  	]]>
    </sql-query>

    <sql-query name="FIND_DOCUMENTS_BY_USER">
        <return class="ecoo.data.UserDocument"/>
        <![CDATA[
            select distinct cd.* from dbo.user_doc cd with(nolock)
            where cd.user_id = :userId
	  	]]>
    </sql-query>

    <sql-query name="FIND_CI_LINES_BY_SHIPMENT">
        <return class="ecoo.data.CommercialInvoiceLine"/>
        <![CDATA[
            select distinct c.* from dbo.doc_comm_inv_ln c with(nolock)
            where c.parent_id = :shipmentId
	  	]]>
    </sql-query>

    <sql-query name="FIND_CI_AMOUNTS_BY_SHIPMENT">
        <return class="ecoo.data.CommercialInvoiceAmount"/>
        <![CDATA[
            select distinct c.* from dbo.doc_comm_inv_amount c with(nolock)
            where c.shipment_id = :shipmentId
	  	]]>
    </sql-query>

    <sql-query name="FIND_AMOUNT_TYPES_BY_SCHEMA">
        <return class="ecoo.data.AmountType"/>
        <![CDATA[
            select distinct c.* from dbo.amount_type c with(nolock)
            where c.amount_schema = :schema
	  	]]>
    </sql-query>

    <sql-query name="FIND_CHAMBER_RATES_BY_CHAMBER_AND_MEMBER">
        <return class="ecoo.data.ChamberRate"/>
        <![CDATA[
            select distinct c.* from dbo.chamber_rate c with(nolock)
            where c.chamber_id = :chamberId
            and c.member = :member
	  	]]>
    </sql-query>

    <sql-query name="FIND_CHAMBER_RATES_BY_CHAMBER">
        <return class="ecoo.data.ChamberRate"/>
        <![CDATA[
            select distinct c.* from dbo.chamber_rate c with(nolock)
            where c.chamber_id = :chamberId
	  	]]>
    </sql-query>

    <sql-query name="FIND_DOCUMENTS_BY_SHIPMENT_AND_TYPE">
        <return class="ecoo.data.ShipmentDocument"/>
        <![CDATA[
            select distinct cd.* from dbo.shipment_doc cd with(nolock)
            where cd.shipment_id = :shipmentId
            and cd.doc_type = :documentType
	  	]]>
    </sql-query>

    <sql-query name="FIND_DOCUMENTS_BY_SHIPMENT">
        <return class="ecoo.data.ShipmentDocument"/>
        <![CDATA[
            select distinct cd.* from dbo.shipment_doc cd with(nolock)
            where cd.shipment_id = :shipmentId
	  	]]>
    </sql-query>

    <sql-query name="FIND_COMPANY_SIGNATORY_BY_USER_AND_COMPANY">
        <return class="ecoo.data.CompanySignatory"/>
        <![CDATA[
            select distinct c.* from dbo.company_sign c with(nolock)
            where c.user_id = :userId
            and c.company_id = :companyId
	  	]]>
    </sql-query>

    <sql-query name="FIND_COMPANY_SIGNATORIES_BY_COMPANY">
        <return class="ecoo.data.CompanySignatory"/>
        <![CDATA[
            select distinct c.* from dbo.company_sign c with(nolock)
            where c.company_id = :companyId
	  	]]>
    </sql-query>

    <sql-query name="FIND_SIGNATURE_BY_PERSONAL_REF">
        <return class="ecoo.data.Signature"/>
        <![CDATA[
            select top 1 s.* from dbo.signature s with(nolock)
            where s.personal_ref_value = :personalReference
	  	]]>
    </sql-query>

    <sql-query name="FIND_CHAMBER_ADMIN_BY_USER">
        <return class="ecoo.data.ChamberAdmin"/>
        <![CDATA[
            select distinct c.* from dbo.chamber_admin c with(nolock)
            where c.user_id = :userId
	  	]]>
    </sql-query>

    <sql-query name="FIND_CHAMBER_USER_BY_USER">
        <return class="ecoo.data.ChamberUser"/>
        <![CDATA[
            select distinct c.* from dbo.chamber_user c with(nolock)
            where c.user_id = :userId
	  	]]>
    </sql-query>

    <sql-query name="FIND_CHAMBER_USER_BY_CHAMBER_AND_USER">
        <return class="ecoo.data.ChamberUser"/>
        <![CDATA[
            select distinct c.* from dbo.chamber_user c with(nolock)
            where c.chamber_id = :chamberId
            and c.user_id = :userId
	  	]]>
    </sql-query>

    <sql-query name="FIND_COMPANY_BY_REGISTRATION_NUMBER">
        <return class="ecoo.data.Company"/>
        <![CDATA[
            select distinct c.* from dbo.company c with(nolock)
            where c.registration_no = :registrationNo
	  	]]>
    </sql-query>

    <sql-query name="FIND_DOCUMENTS_BY_COMPANY_AND_TYPE">
        <return class="ecoo.data.CompanyDocument"/>
        <![CDATA[
            select distinct cd.* from dbo.company_doc cd with(nolock)
            where cd.company_id = :companyId
            and cd.doc_type = :documentType
	  	]]>
    </sql-query>

    <sql-query name="FIND_DOCUMENTS_BY_COMPANY">
        <return class="ecoo.data.CompanyDocument"/>
        <![CDATA[
            select distinct cd.* from dbo.company_doc cd with(nolock)
            where cd.company_id = :companyId
	  	]]>
    </sql-query>

    <sql-query name="FIND_USERS_ASSOCIATED_TO_ME">
        <return class="ecoo.data.User"/>
        <![CDATA[
            select uc.* from dbo.user_acc uc with(nolock)
            inner join dbo.chamber_user cu with(nolock) on cu.user_id = uc.id
            where cu.chamber_id in(:chamberIds)
            and uc.reserved = 0
            union
            select uc.* from dbo.user_acc uc with(nolock)
            inner join dbo.chamber_admin cu with(nolock) on cu.user_id = uc.id
            where cu.chamber_id in(:chamberIds)
            and uc.reserved = 0
	  	]]>
    </sql-query>

    <sql-query name="FIND_USERS_BY_CHAMBER">
        <![CDATA[
            select
				 cu.id
				,uc.id user_id
				,uc.display_name
				,uc.username
				,uc.personal_ref_value
				,uc.primary_email_address
				,CASE WHEN c.name IS NULL THEN NULL ELSE c.name END name
				,uc.designation
				,uc.status
				,cu.member_ind
				,cu.start_date
				,cu.end_date

            from dbo.user_acc uc with(nolock)
				inner join dbo.chamber_user cu with(nolock) on cu.user_id = uc.id
				left outer join dbo.company c with(nolock) on c.id = uc.company_id
            where cu.chamber_id = :chamberId
	  	]]>
    </sql-query>

    <sql-query name="FIND_USERS_BY_COMPANY">
        <return class="ecoo.data.User"/>
        <![CDATA[
            select distinct uc.* from dbo.user_acc uc with(nolock)
            where uc.company_id = :companyId
	  	]]>
    </sql-query>

    <sql-query name="FIND_USERS_BY_ROLE">
        <return class="ecoo.data.User"/>
        <![CDATA[
            select distinct uc.* from dbo.user_role ur with(nolock)
            inner join dbo.user_acc uc with(nolock) on uc.id = ur.user_id
            where ur.role = :role
	  	]]>
    </sql-query>

    <sql-query name="FIND_USER_SIGNATURES_BY_USER_AND_EFFECTIVE_DATE">
        <return class="ecoo.data.UserSignature"/>
        <![CDATA[
            select * from dbo.user_signature with(nolock)
            where user_id = :userId
            and (:effectiveDate between eff_from_date and eff_to_date)
	  	]]>
    </sql-query>

    <sql-query name="FIND_USER_SIGNATURES_BY_USER">
        <return class="ecoo.data.UserSignature"/>
        <![CDATA[
            select * from dbo.user_signature with(nolock)
            where user_id = :userId
	  	]]>
    </sql-query>

    <sql-query name="FIND_MOST_RECENT_SYSTEM_JOB_BY_CLASSNAME">
        <return class="ecoo.data.SystemJob"/>
        <![CDATA[
            select s.* from system_job s with(nolock)
                inner join (
                    select class_name,max(start_time) start_time
                    from system_job with(nolock)
                    group by class_name
                ) subquery
                on subquery.class_name = s.class_name
                and subquery.start_time = s.start_time
            order by s.class_name
	  	]]>
    </sql-query>

</hibernate-mapping>